{
  "packages/code-analytics/src/utils.ts": [],
  "packages/code-analytics/src/types.ts": [],
  "packages/code-analytics/src/tree-sitter-typescript.d.ts": [],
  "packages/code-analytics/src/index.ts": [
    {
      "analyzer": "dead-code",
      "line": 2,
      "type": "warning",
      "message": "Unused import: 'CodeAnalyzer'",
      "diagnostic": {
        "identifier": "CodeAnalyzer",
        "declarationType": "import_specifier"
      }
    },
    {
      "analyzer": "dead-code",
      "line": 2,
      "type": "warning",
      "message": "Unused import: 'AnalysisResult'",
      "diagnostic": {
        "identifier": "AnalysisResult",
        "declarationType": "import_specifier"
      }
    },
    {
      "analyzer": "dead-code",
      "line": 2,
      "type": "warning",
      "message": "Unused import: 'AnalysisContext'",
      "diagnostic": {
        "identifier": "AnalysisContext",
        "declarationType": "import_specifier"
      }
    }
  ],
  "packages/code-analytics/src/cli.ts": [
    {
      "analyzer": "dead-code",
      "line": 5,
      "type": "warning",
      "message": "Unused import: 'AnalysisResult'",
      "diagnostic": {
        "identifier": "AnalysisResult",
        "declarationType": "import_specifier"
      }
    },
    {
      "analyzer": "dead-code",
      "line": 5,
      "type": "warning",
      "message": "Unused import: 'AnalysisContext'",
      "diagnostic": {
        "identifier": "AnalysisContext",
        "declarationType": "import_specifier"
      }
    },
    {
      "analyzer": "dead-code",
      "line": 6,
      "type": "warning",
      "message": "Unused import: 'CodeAnalyzer'",
      "diagnostic": {
        "identifier": "CodeAnalyzer",
        "declarationType": "import_specifier"
      }
    },
    {
      "analyzer": "cyclomatic-complexity",
      "line": 40,
      "type": "warning",
      "message": "Function 'runAnalysis' has a cyclomatic complexity of 17, which exceeds the threshold of 10.",
      "diagnostic": {
        "functionName": "runAnalysis",
        "complexity": 17,
        "threshold": 10
      }
    },
    {
      "analyzer": "function-length",
      "line": 41,
      "type": "warning",
      "message": "Function 'runAnalysis' is too long (151 lines). Maximum allowed is 50.",
      "diagnostic": {
        "functionName": "runAnalysis",
        "length": 151,
        "threshold": 50
      }
    }
  ],
  "packages/code-analytics/src/parser/parser.ts": [],
  "packages/code-analytics/src/analyzers/types.ts": [],
  "packages/code-analytics/src/analyzers/namingConvention.ts": [
    {
      "analyzer": "dead-code",
      "line": 1,
      "type": "warning",
      "message": "Unused import: 'SyntaxNode'",
      "diagnostic": {
        "identifier": "SyntaxNode",
        "declarationType": "import_specifier"
      }
    },
    {
      "analyzer": "dead-code",
      "line": 1,
      "type": "warning",
      "message": "Unused import: 'TreeCursor'",
      "diagnostic": {
        "identifier": "TreeCursor",
        "declarationType": "import_specifier"
      }
    },
    {
      "analyzer": "dead-code",
      "line": 2,
      "type": "warning",
      "message": "Unused import: 'CodeAnalyzer'",
      "diagnostic": {
        "identifier": "CodeAnalyzer",
        "declarationType": "import_specifier"
      }
    },
    {
      "analyzer": "dead-code",
      "line": 2,
      "type": "warning",
      "message": "Unused import: 'AnalysisResult'",
      "diagnostic": {
        "identifier": "AnalysisResult",
        "declarationType": "import_specifier"
      }
    },
    {
      "analyzer": "dead-code",
      "line": 2,
      "type": "warning",
      "message": "Unused import: 'AnalysisContext'",
      "diagnostic": {
        "identifier": "AnalysisContext",
        "declarationType": "import_specifier"
      }
    },
    {
      "analyzer": "cyclomatic-complexity",
      "line": 21,
      "type": "warning",
      "message": "Function '<anonymous>' has a cyclomatic complexity of 13, which exceeds the threshold of 10.",
      "diagnostic": {
        "functionName": "<anonymous>",
        "complexity": 13,
        "threshold": 10
      }
    },
    {
      "analyzer": "cyclomatic-complexity",
      "line": 54,
      "type": "warning",
      "message": "Function '<anonymous>' has a cyclomatic complexity of 17, which exceeds the threshold of 10.",
      "diagnostic": {
        "functionName": "<anonymous>",
        "complexity": 17,
        "threshold": 10
      }
    },
    {
      "analyzer": "function-length",
      "line": 55,
      "type": "warning",
      "message": "Function '<anonymous>' is too long (91 lines). Maximum allowed is 50.",
      "diagnostic": {
        "functionName": "<anonymous>",
        "length": 91,
        "threshold": 50
      }
    }
  ],
  "packages/code-analytics/src/analyzers/functionLength.ts": [
    {
      "analyzer": "dead-code",
      "line": 1,
      "type": "warning",
      "message": "Unused import: 'SyntaxNode'",
      "diagnostic": {
        "identifier": "SyntaxNode",
        "declarationType": "import_specifier"
      }
    },
    {
      "analyzer": "dead-code",
      "line": 1,
      "type": "warning",
      "message": "Unused import: 'TreeCursor'",
      "diagnostic": {
        "identifier": "TreeCursor",
        "declarationType": "import_specifier"
      }
    },
    {
      "analyzer": "dead-code",
      "line": 2,
      "type": "warning",
      "message": "Unused import: 'CodeAnalyzer'",
      "diagnostic": {
        "identifier": "CodeAnalyzer",
        "declarationType": "import_specifier"
      }
    },
    {
      "analyzer": "dead-code",
      "line": 2,
      "type": "warning",
      "message": "Unused import: 'AnalysisResult'",
      "diagnostic": {
        "identifier": "AnalysisResult",
        "declarationType": "import_specifier"
      }
    },
    {
      "analyzer": "dead-code",
      "line": 2,
      "type": "warning",
      "message": "Unused import: 'AnalysisContext'",
      "diagnostic": {
        "identifier": "AnalysisContext",
        "declarationType": "import_specifier"
      }
    },
    {
      "analyzer": "cyclomatic-complexity",
      "line": 15,
      "type": "warning",
      "message": "Function '<anonymous>' has a cyclomatic complexity of 19, which exceeds the threshold of 10.",
      "diagnostic": {
        "functionName": "<anonymous>",
        "complexity": 19,
        "threshold": 10
      }
    },
    {
      "analyzer": "function-length",
      "line": 16,
      "type": "warning",
      "message": "Function '<anonymous>' is too long (78 lines). Maximum allowed is 50.",
      "diagnostic": {
        "functionName": "<anonymous>",
        "length": 78,
        "threshold": 50
      }
    }
  ],
  "packages/code-analytics/src/analyzers/dependencyVulnerability.ts": [
    {
      "analyzer": "dead-code",
      "line": 2,
      "type": "warning",
      "message": "Unused import: 'CodeAnalyzer'",
      "diagnostic": {
        "identifier": "CodeAnalyzer",
        "declarationType": "import_specifier"
      }
    },
    {
      "analyzer": "dead-code",
      "line": 2,
      "type": "warning",
      "message": "Unused import: 'AnalysisResult'",
      "diagnostic": {
        "identifier": "AnalysisResult",
        "declarationType": "import_specifier"
      }
    },
    {
      "analyzer": "dead-code",
      "line": 2,
      "type": "warning",
      "message": "Unused import: 'AnalysisContext'",
      "diagnostic": {
        "identifier": "AnalysisContext",
        "declarationType": "import_specifier"
      }
    },
    {
      "analyzer": "cyclomatic-complexity",
      "line": 29,
      "type": "warning",
      "message": "Function '<anonymous>' has a cyclomatic complexity of 23, which exceeds the threshold of 10.",
      "diagnostic": {
        "functionName": "<anonymous>",
        "complexity": 23,
        "threshold": 10
      }
    },
    {
      "analyzer": "function-length",
      "line": 30,
      "type": "warning",
      "message": "Function '<anonymous>' is too long (142 lines). Maximum allowed is 50.",
      "diagnostic": {
        "functionName": "<anonymous>",
        "length": 142,
        "threshold": 50
      }
    }
  ],
  "packages/code-analytics/src/analyzers/deadCode.ts": [
    {
      "analyzer": "dead-code",
      "line": 1,
      "type": "warning",
      "message": "Unused import: 'SyntaxNode'",
      "diagnostic": {
        "identifier": "SyntaxNode",
        "declarationType": "import_specifier"
      }
    },
    {
      "analyzer": "dead-code",
      "line": 1,
      "type": "warning",
      "message": "Unused import: 'TreeCursor'",
      "diagnostic": {
        "identifier": "TreeCursor",
        "declarationType": "import_specifier"
      }
    },
    {
      "analyzer": "dead-code",
      "line": 2,
      "type": "warning",
      "message": "Unused import: 'CodeAnalyzer'",
      "diagnostic": {
        "identifier": "CodeAnalyzer",
        "declarationType": "import_specifier"
      }
    },
    {
      "analyzer": "dead-code",
      "line": 2,
      "type": "warning",
      "message": "Unused import: 'AnalysisResult'",
      "diagnostic": {
        "identifier": "AnalysisResult",
        "declarationType": "import_specifier"
      }
    },
    {
      "analyzer": "dead-code",
      "line": 2,
      "type": "warning",
      "message": "Unused import: 'AnalysisContext'",
      "diagnostic": {
        "identifier": "AnalysisContext",
        "declarationType": "import_specifier"
      }
    },
    {
      "analyzer": "cyclomatic-complexity",
      "line": 29,
      "type": "warning",
      "message": "Function '<anonymous>' has a cyclomatic complexity of 12, which exceeds the threshold of 10.",
      "diagnostic": {
        "functionName": "<anonymous>",
        "complexity": 12,
        "threshold": 10
      }
    },
    {
      "analyzer": "cyclomatic-complexity",
      "line": 62,
      "type": "warning",
      "message": "Function '<anonymous>' has a cyclomatic complexity of 16, which exceeds the threshold of 10.",
      "diagnostic": {
        "functionName": "<anonymous>",
        "complexity": 16,
        "threshold": 10
      }
    },
    {
      "analyzer": "cyclomatic-complexity",
      "line": 219,
      "type": "warning",
      "message": "Function '<anonymous>' has a cyclomatic complexity of 15, which exceeds the threshold of 10.",
      "diagnostic": {
        "functionName": "<anonymous>",
        "complexity": 15,
        "threshold": 10
      }
    }
  ],
  "packages/code-analytics/src/analyzers/cyclomaticComplexity.ts": [
    {
      "analyzer": "dead-code",
      "line": 1,
      "type": "warning",
      "message": "Unused import: 'SyntaxNode'",
      "diagnostic": {
        "identifier": "SyntaxNode",
        "declarationType": "import_specifier"
      }
    },
    {
      "analyzer": "dead-code",
      "line": 1,
      "type": "warning",
      "message": "Unused import: 'TreeCursor'",
      "diagnostic": {
        "identifier": "TreeCursor",
        "declarationType": "import_specifier"
      }
    },
    {
      "analyzer": "dead-code",
      "line": 2,
      "type": "warning",
      "message": "Unused import: 'CodeAnalyzer'",
      "diagnostic": {
        "identifier": "CodeAnalyzer",
        "declarationType": "import_specifier"
      }
    },
    {
      "analyzer": "dead-code",
      "line": 2,
      "type": "warning",
      "message": "Unused import: 'AnalysisResult'",
      "diagnostic": {
        "identifier": "AnalysisResult",
        "declarationType": "import_specifier"
      }
    },
    {
      "analyzer": "dead-code",
      "line": 2,
      "type": "warning",
      "message": "Unused import: 'AnalysisContext'",
      "diagnostic": {
        "identifier": "AnalysisContext",
        "declarationType": "import_specifier"
      }
    },
    {
      "analyzer": "cyclomatic-complexity",
      "line": 15,
      "type": "warning",
      "message": "Function '<anonymous>' has a cyclomatic complexity of 15, which exceeds the threshold of 10.",
      "diagnostic": {
        "functionName": "<anonymous>",
        "complexity": 15,
        "threshold": 10
      }
    },
    {
      "analyzer": "function-length",
      "line": 16,
      "type": "warning",
      "message": "Function '<anonymous>' is too long (56 lines). Maximum allowed is 50.",
      "diagnostic": {
        "functionName": "<anonymous>",
        "length": 56,
        "threshold": 50
      }
    }
  ],
  "package.json": []
}